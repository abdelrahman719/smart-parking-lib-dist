import { EventEmitter, TemplateRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { FormGroup, AbstractControl } from '@angular/forms';
import { IComponentFormError } from '../../interfaces';
import * as i0 from "@angular/core";
export declare class CustomCounterInputComponent implements OnInit, OnChanges {
    parentForm: FormGroup;
    controlName: string;
    step: number;
    min: number;
    max: number | null;
    disabled: boolean;
    headerTemplate?: TemplateRef<unknown>;
    validation: IComponentFormError[];
    name: string;
    valueChange: EventEmitter<number>;
    control: AbstractControl;
    isDisabled: boolean;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private rawValue;
    private asNumberOrNull;
    private clamp;
    private setValue;
    private currentNumber;
    increase(): void;
    decrease(): void;
    canDecrement(): boolean;
    canIncrement(): boolean;
    onKeyDown(e: KeyboardEvent): void;
    onTyped(ev: Event): void;
    onPaste(e: ClipboardEvent): void;
    onBlur(): void;
    private onlyDigits;
    private initControl;
    private applyDisabled;
    private syncValueToBounds;
    private listenToControlChanges;
    showError(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomCounterInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CustomCounterInputComponent, "custom-counter-input", never, { "parentForm": { "alias": "parentForm"; "required": true; }; "controlName": { "alias": "controlName"; "required": true; }; "step": { "alias": "step"; "required": false; }; "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "headerTemplate": { "alias": "headerTemplate"; "required": false; }; "validation": { "alias": "validation"; "required": false; }; "name": { "alias": "name"; "required": false; }; }, { "valueChange": "valueChange"; }, never, never, true, never>;
}
